angular.module("app",["ngRoute"]),angular.module("app").controller("ApplicationCtrl",["$scope",function(t){t.$on("login",function(e,n){t.currentUser=n})}]),angular.module("app").controller("LoginCtrl",["$scope","UserSvc",function(t,e){t.login=function(n,o){e.login(n,o).then(function(e){t.$emit("login",e)})}}]),angular.module("app").controller("PostsCtrl",["$scope","PostsSvc",function(t,e){t.addPost=function(){t.postfileRef&&e.create({username:"miketest",fileRef:t.postfileRef,prefix:t.postprefix,firstName:t.postfirstName,lastName:t.postlastName,address:t.postaddress,townland:t.posttownland,phone:t.postphone,fax:t.postfax,email:t.postemail,noResidents:t.postnoResidents,noDoubleBeds:t.postnoDoubleBeds,noSingleBeds:t.postnoSingleBeds,waterSupply:t.postwaterSupply}).success(function(e){t.postfileRef=null,t.postprefix=null,t.postfirstName=null,t.postlastName=null,t.postaddress=null,t.posttownland=null,t.postphone=null,t.postfax=null,t.postemail=null,t.postnoResidents=null,t.postnoDoubleBeds=null,t.postnoSingleBeds=null,t.postwaterSupply=null})},t.$on("ws:new_project",function(e,n){t.$apply(function(){t.posts.unshift(n)})}),e.fetch().success(function(e){t.posts=e})}]),angular.module("app").service("PostsSvc",["$http",function(t){this.fetch=function(){return t.get("/api/posts")},this.create=function(e){return t.post("/api/posts",e)}}]),angular.module("app").controller("RegisterCtrl",["$scope","UserSvc",function(t,e){t.register=function(n,o){e.register(n,o).then(function(e){t.$emit("login",e)})}}]),angular.module("app").config(["$routeProvider",function(t){t.when("/",{controller:"PostsCtrl",templateUrl:"/templates/posts.html"}).when("/register",{controller:"RegisterCtrl",templateUrl:"/templates/register.html"}).when("/login",{controller:"LoginCtrl",templateUrl:"/templates/login.html"})}]),angular.module("app").service("UserSvc",["$http",function(t){var e=this;e.getUser=function(){return t.get("/api/users").then(function(t){return t.data})},e.login=function(n,o){return t.post("/api/sessions",{username:n,password:o}).then(function(n){return e.token=n.data,t.defaults.headers.common["X-Auth"]=n.data,e.getUser()})},e.register=function(n,o){return t.post("/api/users",{username:n,password:o}).then(function(){return e.login(n,o)})}}]),angular.module("app").run(["$rootScope","$timeout",function(t,e){!function n(){var o="ws://localhost:3000",s=new WebSocket(o);s.onopen=function(){console.log("Websocket Connected")},s.onclose=function(t){console.log("Websocket disconnected. Trying to reconnect..."),e(n,1e4)},s.onmessage=function(e){var n=JSON.parse(e.data);t.$broadcast("ws:"+n.topic,n.data)}}()}]);
//# sourceMappingURL=data:application/json;base64,